pub fn note_pressed(&mut self, note: i32){
        let freq = Self::get_frequency(note as f32);

        let freq_whole_step_below = Self::get_frequency(note as f32 - 2.0);
        let freq_whole_step_above = Self::get_frequency(note as f32 + 2.0);
        let freq_half_step_below = Self::get_frequency(note as f32 - 1.5);
        let freq_half_step_above = Self::get_frequency(note as f32 + 1.5);
        let next_below = Self::get_frequency(note as f32 - 0.75);
        let next_above = Self::get_frequency(note as f32 + 0.75);

        let one_cent_up = freq / 800.0;
        let half_freq = freq / 2.0;
        let one_cent_down = half_freq / 800.0;

        let mut unison_voices: Vec<NoteGenerator> = Vec::new();

        //let note_gen: NoteGenerator = NoteGenerator::new(freq, self.get_wave_types());
        //unison_voices.push(note_gen);

        let note_gen: NoteGenerator = NoteGenerator::new(freq_half_step_below , self.get_wave_types());
        // let note_gen2: NoteGenerator = NoteGenerator::new(freq_whole_step_below, self.get_wave_types());
        //let note_gen3: NoteGenerator = NoteGenerator::new(freq_whole_step_above, self.get_wave_types());
        let note_gen4: NoteGenerator = NoteGenerator::new(freq_half_step_above, self.get_wave_types());
        let note_gen5: NoteGenerator = NoteGenerator::new(next_below, self.get_wave_types());
        let note_gen6: NoteGenerator = NoteGenerator::new(next_above, self.get_wave_types());
        unison_voices.push(note_gen);
        // unison_voices.push(note_gen2);
        //unison_voices.push(note_gen3);
        unison_voices.push(note_gen4);
        unison_voices.push(note_gen5);
        unison_voices.push(note_gen6);
        
        self.held_notes.insert(note, unison_voices);
    }